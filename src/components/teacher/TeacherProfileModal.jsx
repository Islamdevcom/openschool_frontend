import React, { useState } from 'react';
import { createPortal } from 'react-dom';
import styles from './TeacherProfileModal.module.css';

const TeacherProfileModal = ({ isOpen, onClose, teacherData, onSave }) => {
  const [formData, setFormData] = useState({
    name: teacherData?.name || '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    avatar: teacherData?.avatar || 'üë©‚Äçüè´',
    email: teacherData?.email || 'i.testov@school1.edu',
    school: teacherData?.school || '–ú–ê–û–£ "–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ125"',
    subject: teacherData?.subject || '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
    experience: teacherData?.experience || '10 –ª–µ—Ç'
  });

  const avatarOptions = ['üë®‚Äçüè´', 'üë©‚Äçüè´', 'üßë‚Äçüéì', 'üë®‚Äçüíº', 'üë©‚Äçüíº', 'ü§ì', 'üòä', 'üéØ', 'üìö', '‚ú®'];

  const handleSubmit = (e) => {
    e.preventDefault();
    onSave && onSave(formData);
    onClose();
  };

  const handleChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  if (!isOpen) return null;

  const handleOverlayClick = (e) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  return createPortal(
    <div className={styles.modalOverlay} onClick={handleOverlayClick}>
      <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–≤–∞—Ç–∞—Ä–æ–º */}
        <div className={styles.profileHeader}>
          <div className={styles.avatarLarge}>
            {formData.avatar}
          </div>
          <button className={styles.closeBtn} onClick={onClose}>
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
            </svg>
          </button>
        </div>

        <div className={styles.content}>
          <h2 className={styles.title}>{formData.name}</h2>
          <p className={styles.subtitle}>–£—á–∏—Ç–µ–ª—å {formData.subject.toLowerCase()} ‚Ä¢ {formData.school}</p>

          <form onSubmit={handleSubmit} className={styles.form}>
            {/* –ò–º—è */}
            <div className={styles.inputGroup}>
              <label className={styles.label}>
                <span className={styles.labelText}>üë§ –ò–º—è</span>
                <input
                  type="text"
                  value={formData.name}
                  onChange={(e) => handleChange('name', e.target.value)}
                  className={styles.input}
                  required
                />
              </label>
            </div>

            {/* –í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–∞ */}
            <div className={styles.inputGroup}>
              <span className={styles.labelText}>üé≠ –ê–≤–∞—Ç–∞—Ä</span>
              <div className={styles.avatarSelector}>
                {avatarOptions.map((emoji) => (
                  <button
                    key={emoji}
                    type="button"
                    className={`${styles.avatarBtn} ${formData.avatar === emoji ? styles.avatarSelected : ''}`}
                    onClick={() => handleChange('avatar', emoji)}
                  >
                    {emoji}
                  </button>
                ))}
              </div>
            </div>

            {/* Email */}
            <div className={styles.inputGroup}>
              <label className={styles.label}>
                <span className={styles.labelText}>üìß Email</span>
                <input
                  type="email"
                  value={formData.email}
                  className={`${styles.input} ${styles.inputDisabled}`}
                  disabled
                />
                <span className={styles.helpText}>Email –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</span>
              </label>
            </div>

            {/* –®–∫–æ–ª–∞ */}
            <div className={styles.inputGroup}>
              <label className={styles.label}>
                <span className={styles.labelText}>üè´ –®–∫–æ–ª–∞</span>
                <input
                  type="text"
                  value={formData.school}
                  onChange={(e) => handleChange('school', e.target.value)}
                  className={styles.input}
                  placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã"
                />
              </label>
            </div>

            {/* –ü—Ä–µ–¥–º–µ—Ç */}
            <div className={styles.inputGroup}>
              <label className={styles.label}>
                <span className={styles.labelText}>üìö –ü—Ä–µ–¥–º–µ—Ç</span>
                <select
                  value={formData.subject}
                  onChange={(e) => handleChange('subject', e.target.value)}
                  className={styles.select}
                >
                  <option value="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞">–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞</option>
                  <option value="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫">–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</option>
                  <option value="–§–∏–∑–∏–∫–∞">–§–∏–∑–∏–∫–∞</option>
                  <option value="–•–∏–º–∏—è">–•–∏–º–∏—è</option>
                  <option value="–ë–∏–æ–ª–æ–≥–∏—è">–ë–∏–æ–ª–æ–≥–∏—è</option>
                  <option value="–ò—Å—Ç–æ—Ä–∏—è">–ò—Å—Ç–æ—Ä–∏—è</option>
                  <option value="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è">–ì–µ–æ–≥—Ä–∞—Ñ–∏—è</option>
                  <option value="–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫">–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫</option>
                  <option value="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞">–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞</option>
                </select>
              </label>
            </div>

            {/* –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã */}
            <div className={styles.inputGroup}>
              <label className={styles.label}>
                <span className={styles.labelText}>‚≠ê –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</span>
                <input
                  type="text"
                  value={formData.experience}
                  onChange={(e) => handleChange('experience', e.target.value)}
                  className={styles.input}
                  placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä: 5 –ª–µ—Ç"
                />
              </label>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div className={styles.actions}>
              <button 
                type="button" 
                className={styles.btnSecondary} 
                onClick={onClose}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button 
                type="submit" 
                className={styles.btnPrimary}
              >
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h11l5 5v11a2 2 0 01-2 2z" stroke="currentColor" strokeWidth="2"/>
                  <polyline points="17,21 17,13 7,13 7,21" stroke="currentColor" strokeWidth="2"/>
                  <polyline points="7,3 7,8 15,8" stroke="currentColor" strokeWidth="2"/>
                </svg>
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>,
    document.body
  );
};

export default TeacherProfileModal;