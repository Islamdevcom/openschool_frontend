import React, { useState } from 'react';
import styles from './SubscriptionPlans.module.css';

function SubscriptionPlans() {
    const [billingPeriod, setBillingPeriod] = useState('monthly');
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–µ
    const currentSubscription = {
        plan: 'premium',
        expiryDate: '2025-09-18',
        daysLeft: 31,
        autoRenewal: true,
        nextPayment: 1299,
        paymentMethod: '–ö–∞—Ä—Ç–∞ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ 4567'
    };

    // –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã
    const plans = [
        {
            id: 'free',
            name: '–ë–∞–∑–æ–≤—ã–π',
            description: '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
            price: { monthly: 0, yearly: 0 },
            popular: false,
            features: [
                { text: '–î–æ—Å—Ç—É–ø –∫ 3 –≥—Ä—É–ø–ø–∞–º', included: true },
                { text: '–ë–∞–∑–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', included: true },
                { text: '–ß–∞—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', included: true },
                { text: '–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è', included: true },
                { text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', included: false },
                { text: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', included: false },
                { text: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏', included: false },
                { text: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', included: false }
            ],
            limitations: [
                '3 –≥—Ä—É–ø–ø—ã –º–∞–∫—Å–∏–º—É–º',
                '–ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª',
                '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
            ]
        },
        {
            id: 'premium',
            name: '–ü—Ä–µ–º–∏—É–º',
            description: '–õ—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è',
            price: { monthly: 1299, yearly: 10999 },
            popular: true,
            features: [
                { text: '–î–æ—Å—Ç—É–ø –∫ 15 –≥—Ä—É–ø–ø–∞–º', included: true },
                { text: '–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ç–µ—Å—Ç—ã', included: true },
                { text: '–ß–∞—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', included: true },
                { text: '–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è', included: true },
                { text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', included: true },
                { text: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', included: true },
                { text: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏', included: false },
                { text: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', included: true }
            ],
            benefits: [
                '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
                '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                '–ë—ã—Å—Ç—Ä–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
            ]
        },
        {
            id: 'pro',
            name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π',
            description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è',
            price: { monthly: 2499, yearly: 21999 },
            popular: false,
            features: [
                { text: '–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø', included: true },
                { text: '–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ç–µ—Å—Ç—ã', included: true },
                { text: '–ß–∞—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', included: true },
                { text: '–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è', included: true },
                { text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', included: true },
                { text: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', included: true },
                { text: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏', included: true },
                { text: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', included: true }
            ],
            benefits: [
                '–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
                '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
                '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è'
            ]
        }
    ];

    const formatPrice = (price) => {
        return new Intl.NumberFormat('ru-RU').format(price);
    };

    const calculateDiscount = (monthly, yearly) => {
        if (monthly === 0) return 0;
        const yearlyMonthly = yearly / 12;
        return Math.round(((monthly - yearlyMonthly) / monthly) * 100);
    };

    const formatDate = (dateStr) => {
        return new Date(dateStr).toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        });
    };

    const isCurrentPlan = (planId) => {
        return currentSubscription.plan === planId;
    };

    return (
        <div className={styles.container}>
            <div className={styles.header}>
                <h2 className={styles.title}>–ü–æ–¥–ø–∏—Å–∫–∞ –∏ —Ç–∞—Ä–∏—Ñ—ã</h2>
                <p className={styles.subtitle}>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è</p>
            </div>

            {/* –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ */}
            <div className={styles.currentSubscription}>
                <div className={styles.subscriptionCard}>
                    <div className={styles.subscriptionHeader}>
                        <div className={styles.subscriptionInfo}>
                            <h3 className={styles.subscriptionTitle}>
                                –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞: {plans.find(p => p.id === currentSubscription.plan)?.name}
                            </h3>
                            <p className={styles.subscriptionStatus}>
                                –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ {formatDate(currentSubscription.expiryDate)}
                            </p>
                        </div>
                        <div className={styles.subscriptionBadge}>
                            <span className={styles.badgeIcon}>‚ú®</span>
                            <span>–ê–∫—Ç–∏–≤–Ω–∞</span>
                        </div>
                    </div>
                    
                    <div className={styles.subscriptionDetails}>
                        <div className={styles.subscriptionStat}>
                            <div className={styles.statValue}>{currentSubscription.daysLeft}</div>
                            <div className={styles.statLabel}>–¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å</div>
                        </div>
                        <div className={styles.subscriptionStat}>
                            <div className={styles.statValue}>{formatPrice(currentSubscription.nextPayment)} ‚ÇΩ</div>
                            <div className={styles.statLabel}>—Å–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂</div>
                        </div>
                        <div className={styles.subscriptionStat}>
                            <div className={styles.statValue}>{currentSubscription.autoRenewal ? '–î–∞' : '–ù–µ—Ç'}</div>
                            <div className={styles.statLabel}>–∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ</div>
                        </div>
                    </div>

                    <div className={styles.subscriptionActions}>
                        <button className={styles.manageBtn}>
                            <span>‚öôÔ∏è</span>
                            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π
                        </button>
                        <button className={styles.paymentBtn}>
                            <span>üí≥</span>
                            –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
                        </button>
                        <button className={styles.historyBtn}>
                            <span>üìä</span>
                            –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
                        </button>
                    </div>
                </div>
            </div>

            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –ø–µ—Ä–∏–æ–¥–∞ –æ–ø–ª–∞—Ç—ã */}
            <div className={styles.billingToggle}>
                <span className={styles.billingLabel}>–ü–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã:</span>
                <div className={styles.toggleContainer}>
                    <button
                        className={`${styles.toggleBtn} ${billingPeriod === 'monthly' ? styles.active : ''}`}
                        onClick={() => setBillingPeriod('monthly')}
                    >
                        –ï–∂–µ–º–µ—Å—è—á–Ω–æ
                    </button>
                    <button
                        className={`${styles.toggleBtn} ${billingPeriod === 'yearly' ? styles.active : ''}`}
                        onClick={() => setBillingPeriod('yearly')}
                    >
                        –ï–∂–µ–≥–æ–¥–Ω–æ
                        <span className={styles.discountBadge}>–°–∫–∏–¥–∫–∞ –¥–æ 30%</span>
                    </button>
                </div>
            </div>

            {/* –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã */}
            <div className={styles.plansGrid}>
                {plans.map(plan => {
                    const currentPrice = plan.price[billingPeriod];
                    const discount = billingPeriod === 'yearly' ? calculateDiscount(plan.price.monthly, plan.price.yearly) : 0;
                    
                    return (
                        <div 
                            key={plan.id} 
                            className={`${styles.planCard} ${plan.popular ? styles.popular : ''} ${isCurrentPlan(plan.id) ? styles.current : ''}`}
                        >
                            {plan.popular && (
                                <div className={styles.popularBadge}>
                                    <span>üî•</span>
                                    –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                                </div>
                            )}
                            
                            {isCurrentPlan(plan.id) && (
                                <div className={styles.currentBadge}>
                                    <span>‚úÖ</span>
                                    –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                                </div>
                            )}

                            <div className={styles.planHeader}>
                                <h3 className={styles.planName}>{plan.name}</h3>
                                <p className={styles.planDescription}>{plan.description}</p>
                                
                                <div className={styles.planPrice}>
                                    {currentPrice === 0 ? (
                                        <span className={styles.freePrice}>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                                    ) : (
                                        <>
                                            <span className={styles.price}>{formatPrice(currentPrice)} ‚ÇΩ</span>
                                            <span className={styles.period}>
                                                /{billingPeriod === 'monthly' ? '–º–µ—Å—è—Ü' : '–≥–æ–¥'}
                                            </span>
                                            {discount > 0 && (
                                                <div className={styles.originalPrice}>
                                                    <span className={styles.crossed}>
                                                        {formatPrice(plan.price.monthly * 12)} ‚ÇΩ/–≥–æ–¥
                                                    </span>
                                                    <span className={styles.discount}>
                                                        –≠–∫–æ–Ω–æ–º–∏—è {discount}%
                                                    </span>
                                                </div>
                                            )}
                                        </>
                                    )}
                                </div>
                            </div>

                            <div className={styles.planFeatures}>
                                <h4 className={styles.featuresTitle}>–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:</h4>
                                <ul className={styles.featuresList}>
                                    {plan.features.map((feature, index) => (
                                        <li 
                                            key={index} 
                                            className={`${styles.feature} ${feature.included ? styles.included : styles.excluded}`}
                                        >
                                            <span className={styles.featureIcon}>
                                                {feature.included ? '‚úÖ' : '‚ùå'}
                                            </span>
                                            <span className={styles.featureText}>{feature.text}</span>
                                        </li>
                                    ))}
                                </ul>
                            </div>

                            {(plan.benefits || plan.limitations) && (
                                <div className={styles.planDetails}>
                                    {plan.benefits && (
                                        <div className={styles.benefits}>
                                            <h5 className={styles.detailsTitle}>üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h5>
                                            <ul className={styles.detailsList}>
                                                {plan.benefits.map((benefit, index) => (
                                                    <li key={index} className={styles.benefit}>{benefit}</li>
                                                ))}
                                            </ul>
                                        </div>
                                    )}
                                    
                                    {plan.limitations && (
                                        <div className={styles.limitations}>
                                            <h5 className={styles.detailsTitle}>‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</h5>
                                            <ul className={styles.detailsList}>
                                                {plan.limitations.map((limitation, index) => (
                                                    <li key={index} className={styles.limitation}>{limitation}</li>
                                                ))}
                                            </ul>
                                        </div>
                                    )}
                                </div>
                            )}

                            <div className={styles.planFooter}>
                                {isCurrentPlan(plan.id) ? (
                                    <button className={styles.currentPlanBtn} disabled>
                                        <span>‚úÖ</span>
                                        –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                                    </button>
                                ) : plan.id === 'free' ? (
                                    <button className={styles.downgradePlanBtn}>
                                        <span>‚¨áÔ∏è</span>
                                        –ü–æ–Ω–∏–∑–∏—Ç—å –¥–æ –±–∞–∑–æ–≤–æ–≥–æ
                                    </button>
                                ) : (
                                    <button className={styles.upgradePlanBtn}>
                                        <span>‚¨ÜÔ∏è</span>
                                        {currentSubscription.plan === 'free' ? '–ü–æ–¥–∫–ª—é—á–∏—Ç—å' : '–ò–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω'}
                                    </button>
                                )}
                            </div>
                        </div>
                    );
                })}
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className={styles.additionalInfo}>
                <div className={styles.infoSection}>
                    <h3 className={styles.infoTitle}>üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</h3>
                    <div className={styles.paymentMethods}>
                        <div className={styles.paymentMethod}>
                            <span className={styles.methodIcon}>üí≥</span>
                            <span>–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã (Visa, MasterCard, –ú–ò–†)</span>
                        </div>
                        <div className={styles.paymentMethod}>
                            <span className={styles.methodIcon}>üì±</span>
                            <span>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ (–ÆMoney, QIWI)</span>
                        </div>
                        <div className={styles.paymentMethod}>
                            <span className={styles.methodIcon}>üè™</span>
                            <span>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã</span>
                        </div>
                    </div>
                </div>

                <div className={styles.infoSection}>
                    <h3 className={styles.infoTitle}>üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏–∏</h3>
                    <div className={styles.guarantees}>
                        <div className={styles.guarantee}>
                            <span className={styles.guaranteeIcon}>‚Ü©Ô∏è</span>
                            <span>–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π</span>
                        </div>
                        <div className={styles.guarantee}>
                            <span className={styles.guaranteeIcon}>üîí</span>
                            <span>–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π</span>
                        </div>
                        <div className={styles.guarantee}>
                            <span className={styles.guaranteeIcon}>‚ö°</span>
                            <span>–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏</span>
                        </div>
                    </div>
                </div>

                <div className={styles.infoSection}>
                    <h3 className={styles.infoTitle}>‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
                    <div className={styles.faq}>
                        <details className={styles.faqItem}>
                            <summary className={styles.faqQuestion}>
                                –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è?
                            </summary>
                            <div className={styles.faqAnswer}>
                                –î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å –∏–ª–∏ –ø–æ–Ω–∏–∑–∏—Ç—å —Ç–∞—Ä–∏—Ñ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –ü—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –¥–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É, –ø—Ä–∏ –ø–æ–Ω–∏–∂–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥.
                            </div>
                        </details>
                        <details className={styles.faqItem}>
                            <summary className={styles.faqQuestion}>
                                –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏?
                            </summary>
                            <div className={styles.faqAnswer}>
                                –ê–∫–∫–∞—É–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –±–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω. –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è, –Ω–æ –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏—è–º –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è.
                            </div>
                        </details>
                        <details className={styles.faqItem}>
                            <summary className={styles.faqQuestion}>
                                –ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤?
                            </summary>
                            <div className={styles.faqAnswer}>
                                –î–∞, –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–Ω—å–≥–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
                            </div>
                        </details>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default SubscriptionPlans;