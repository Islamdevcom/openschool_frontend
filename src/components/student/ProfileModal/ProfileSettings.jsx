import React, { useState } from 'react';
import styles from './ProfileSettings.module.css';

function ProfileSettings() {
    const [activeSection, setActiveSection] = useState('profile');
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è
    const [profileData, setProfileData] = useState({
        firstName: '–ò–≤–∞–Ω',
        lastName: '–ü–µ—Ç—Ä–æ–≤',
        email: 'ivan.petrov@example.com',
        phone: '+7 (999) 123-45-67',
        birthDate: '2007-03-15',
        grade: '10',
        school: '–ú–ë–û–£ "–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ1"',
        city: '–ú–æ—Å–∫–≤–∞',
        bio: '–£–≤–ª–µ–∫–∞—é—Å—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–æ–π –∏ —Ñ–∏–∑–∏–∫–æ–π. –ì–æ—Ç–æ–≤–ª—é—Å—å –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç.',
        avatar: null
    });

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const [notificationSettings, setNotificationSettings] = useState({
        emailNotifications: true,
        pushNotifications: true,
        smsNotifications: false,
        newMessages: true,
        homeworkReminders: true,
        lessonsReminders: true,
        achievementNotifications: true,
        weeklyReport: true,
        marketingEmails: false
    });

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
    const [privacySettings, setPrivacySettings] = useState({
        profileVisibility: 'students', // 'public', 'students', 'teachers', 'private'
        showEmail: false,
        showPhone: false,
        showBirthDate: false,
        allowTeacherContact: true,
        allowStudentContact: true,
        showInLeaderboard: true,
        dataCollection: true
    });

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    const [securitySettings, setSecuritySettings] = useState({
        twoFactorAuth: false,
        sessionTimeout: '30', // –≤ –º–∏–Ω—É—Ç–∞—Ö
        loginNotifications: true,
        deviceManagement: true
    });

    const sections = [
        { id: 'profile', icon: 'üë§', label: '–ü—Ä–æ—Ñ–∏–ª—å' },
        { id: 'notifications', icon: 'üîî', label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' },
        { id: 'privacy', icon: 'üîí', label: '–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å' },
        { id: 'security', icon: 'üõ°Ô∏è', label: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å' },
        { id: 'appearance', icon: 'üé®', label: '–í–Ω–µ—à–Ω–∏–π –≤–∏–¥' },
        { id: 'data', icon: 'üìä', label: '–î–∞–Ω–Ω—ã–µ' }
    ];

    const handleProfileChange = (field, value) => {
        setProfileData(prev => ({ ...prev, [field]: value }));
    };

    const handleNotificationChange = (field, value) => {
        setNotificationSettings(prev => ({ ...prev, [field]: value }));
    };

    const handlePrivacyChange = (field, value) => {
        setPrivacySettings(prev => ({ ...prev, [field]: value }));
    };

    const handleSecurityChange = (field, value) => {
        setSecuritySettings(prev => ({ ...prev, [field]: value }));
    };

    const saveSettings = () => {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
    };

    const resetSettings = () => {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
            // –õ–æ–≥–∏–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã!');
        }
    };

    const exportData = () => {
        // –õ–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        alert('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞—á–∞—Ç. –§–∞–π–ª –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É.');
    };

    const deleteAccount = () => {
        if (confirm('–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ. –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
            alert('–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.');
        }
    };

    const renderProfileSection = () => (
        <div className={styles.section}>
            <h3 className={styles.sectionTitle}>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            
            <div className={styles.avatarSection}>
                <div className={styles.avatarContainer}>
                    <div className={styles.avatar}>
                        {profileData.avatar ? (
                            <img src={profileData.avatar} alt="Avatar" />
                        ) : (
                            <span className={styles.avatarText}>
                                {profileData.firstName.charAt(0)}{profileData.lastName.charAt(0)}
                            </span>
                        )}
                    </div>
                    <div className={styles.avatarActions}>
                        <button className={styles.avatarBtn}>üì∏ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ</button>
                        <button className={styles.avatarBtn}>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                    </div>
                </div>
            </div>

            <div className={styles.formGrid}>
                <div className={styles.formGroup}>
                    <label className={styles.label}>–ò–º—è</label>
                    <input
                        type="text"
                        value={profileData.firstName}
                        onChange={(e) => handleProfileChange('firstName', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroup}>
                    <label className={styles.label}>–§–∞–º–∏–ª–∏—è</label>
                    <input
                        type="text"
                        value={profileData.lastName}
                        onChange={(e) => handleProfileChange('lastName', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroup}>
                    <label className={styles.label}>Email</label>
                    <input
                        type="email"
                        value={profileData.email}
                        onChange={(e) => handleProfileChange('email', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroup}>
                    <label className={styles.label}>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                    <input
                        type="tel"
                        value={profileData.phone}
                        onChange={(e) => handleProfileChange('phone', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroup}>
                    <label className={styles.label}>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
                    <input
                        type="date"
                        value={profileData.birthDate}
                        onChange={(e) => handleProfileChange('birthDate', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroup}>
                    <label className={styles.label}>–ö–ª–∞—Å—Å</label>
                    <select
                        value={profileData.grade}
                        onChange={(e) => handleProfileChange('grade', e.target.value)}
                        className={styles.select}
                    >
                        {Array.from({ length: 11 }, (_, i) => i + 1).map(grade => (
                            <option key={grade} value={grade}>{grade} –∫–ª–∞—Å—Å</option>
                        ))}
                    </select>
                </div>
                
                <div className={styles.formGroupFull}>
                    <label className={styles.label}>–®–∫–æ–ª–∞</label>
                    <input
                        type="text"
                        value={profileData.school}
                        onChange={(e) => handleProfileChange('school', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroupFull}>
                    <label className={styles.label}>–ì–æ—Ä–æ–¥</label>
                    <input
                        type="text"
                        value={profileData.city}
                        onChange={(e) => handleProfileChange('city', e.target.value)}
                        className={styles.input}
                    />
                </div>
                
                <div className={styles.formGroupFull}>
                    <label className={styles.label}>–û —Å–µ–±–µ</label>
                    <textarea
                        value={profileData.bio}
                        onChange={(e) => handleProfileChange('bio', e.target.value)}
                        className={styles.textarea}
                        rows="4"
                        placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö –∏ —Ü–µ–ª—è—Ö..."
                    />
                </div>
            </div>
        </div>
    );

    const renderNotificationsSection = () => (
        <div className={styles.section}>
            <h3 className={styles.sectionTitle}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
            
            <div className={styles.settingsGroup}>
                <h4 className={styles.groupTitle}>–°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏</h4>
                <div className={styles.settingsList}>
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <span className={styles.settingDescription}>–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –ø–æ—á—Ç—É</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.emailNotifications}
                                onChange={(e) => handleNotificationChange('emailNotifications', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üì± Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <span className={styles.settingDescription}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.pushNotifications}
                                onChange={(e) => handleNotificationChange('pushNotifications', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üí¨ SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <span className={styles.settingDescription}>–í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ SMS</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.smsNotifications}
                                onChange={(e) => handleNotificationChange('smsNotifications', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                </div>
            </div>

            <div className={styles.settingsGroup}>
                <h4 className={styles.groupTitle}>–¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h4>
                <div className={styles.settingsList}>
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üí¨ –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</span>
                            <span className={styles.settingDescription}>–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.newMessages}
                                onChange={(e) => handleNotificationChange('newMessages', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üìù –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –î–ó</span>
                            <span className={styles.settingDescription}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.homeworkReminders}
                                onChange={(e) => handleNotificationChange('homeworkReminders', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± —É—Ä–æ–∫–∞—Ö</span>
                            <span className={styles.settingDescription}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.lessonsReminders}
                                onChange={(e) => handleNotificationChange('lessonsReminders', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</span>
                            <span className={styles.settingDescription}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.achievementNotifications}
                                onChange={(e) => handleNotificationChange('achievementNotifications', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</span>
                            <span className={styles.settingDescription}>–°–≤–æ–¥–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞ –Ω–µ–¥–µ–ª—é</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={notificationSettings.weeklyReport}
                                onChange={(e) => handleNotificationChange('weeklyReport', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    );

    const renderPrivacySection = () => (
        <div className={styles.section}>
            <h3 className={styles.sectionTitle}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</h3>
            
            <div className={styles.settingsGroup}>
                <h4 className={styles.groupTitle}>–í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è</h4>
                <div className={styles.radioGroup}>
                    <label className={styles.radioItem}>
                        <input
                            type="radio"
                            name="profileVisibility"
                            value="public"
                            checked={privacySettings.profileVisibility === 'public'}
                            onChange={(e) => handlePrivacyChange('profileVisibility', e.target.value)}
                        />
                        <span className={styles.radioLabel}>
                            <span className={styles.radioTitle}>üåç –ü—É–±–ª–∏—á–Ω—ã–π</span>
                            <span className={styles.radioDescription}>–ü—Ä–æ—Ñ–∏–ª—å –≤–∏–¥–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</span>
                        </span>
                    </label>
                    
                    <label className={styles.radioItem}>
                        <input
                            type="radio"
                            name="profileVisibility"
                            value="students"
                            checked={privacySettings.profileVisibility === 'students'}
                            onChange={(e) => handlePrivacyChange('profileVisibility', e.target.value)}
                        />
                        <span className={styles.radioLabel}>
                            <span className={styles.radioTitle}>üë• –¢–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç—ã</span>
                            <span className={styles.radioDescription}>–í–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –¥—Ä—É–≥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º</span>
                        </span>
                    </label>
                    
                    <label className={styles.radioItem}>
                        <input
                            type="radio"
                            name="profileVisibility"
                            value="teachers"
                            checked={privacySettings.profileVisibility === 'teachers'}
                            onChange={(e) => handlePrivacyChange('profileVisibility', e.target.value)}
                        />
                        <span className={styles.radioLabel}>
                            <span className={styles.radioTitle}>üë®‚Äçüéì –¢–æ–ª—å–∫–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</span>
                            <span className={styles.radioDescription}>–í–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º</span>
                        </span>
                    </label>
                    
                    <label className={styles.radioItem}>
                        <input
                            type="radio"
                            name="profileVisibility"
                            value="private"
                            checked={privacySettings.profileVisibility === 'private'}
                            onChange={(e) => handlePrivacyChange('profileVisibility', e.target.value)}
                        />
                        <span className={styles.radioLabel}>
                            <span className={styles.radioTitle}>üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–π</span>
                            <span className={styles.radioDescription}>–ü—Ä–æ—Ñ–∏–ª—å —Å–∫—Ä—ã—Ç –æ—Ç –≤—Å–µ—Ö</span>
                        </span>
                    </label>
                </div>
            </div>

            <div className={styles.settingsGroup}>
                <h4 className={styles.groupTitle}>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h4>
                <div className={styles.settingsList}>
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üìß –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å email</span>
                            <span className={styles.settingDescription}>Email –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª–µ</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={privacySettings.showEmail}
                                onChange={(e) => handlePrivacyChange('showEmail', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üì± –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω</span>
                            <span className={styles.settingDescription}>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª–µ</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={privacySettings.showPhone}
                                onChange={(e) => handlePrivacyChange('showPhone', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                    
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üèÜ –£—á–∞—Å—Ç–∏–µ –≤ —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö</span>
                            <span className={styles.settingDescription}>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö –ª–∏–¥–µ—Ä–æ–≤</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={privacySettings.showInLeaderboard}
                                onChange={(e) => handlePrivacyChange('showInLeaderboard', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    );

    const renderSecuritySection = () => (
        <div className={styles.section}>
            <h3 className={styles.sectionTitle}>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞</h3>
            
            <div className={styles.settingsGroup}>
                <h4 className={styles.groupTitle}>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h4>
                <div className={styles.settingsList}>
                    <div className={styles.settingItem}>
                        <div className={styles.settingInfo}>
                            <span className={styles.settingLabel}>üîê –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</span>
                            <span className={styles.settingDescription}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞</span>
                        </div>
                        <label className={styles.switch}>
                            <input
                                type="checkbox"
                                checked={securitySettings.twoFactorAuth}
                                onChange={(e) => handleSecurityChange('twoFactorAuth', e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>
                </div>
            </div>

            <div className={styles.settingsGroup}>
                <h4 className={styles.groupTitle}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏</h4>
                <div className={styles.formGroup}>
                    <label className={styles.label}>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ (–º–∏–Ω—É—Ç—ã)</label>
                    <select
                        value={securitySettings.sessionTimeout}
                        onChange={(e) => handleSecurityChange('sessionTimeout', e.target.value)}
                        className={styles.select}
                    >
                        <option value="15">15 –º–∏–Ω—É—Ç</option>
                        <option value="30">30 –º–∏–Ω—É—Ç</option>
                        <option value="60">1 —á–∞—Å</option>
                        <option value="120">2 —á–∞—Å–∞</option>
                        <option value="never">–ù–∏–∫–æ–≥–¥–∞</option>
                    </select>
                </div>
            </div>

            <div className={styles.dangerZone}>
                <h4 className={styles.dangerTitle}>üö® –û–ø–∞—Å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h4>
                <div className={styles.dangerActions}>
                    <button className={styles.dangerBtn} onClick={() => alert('–§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è')}>
                        üîë –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                    </button>
                    <button className={styles.dangerBtn} onClick={() => alert('–§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ —Å–æ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤')}>
                        üì± –í—ã–π—Ç–∏ —Å–æ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
                    </button>
                </div>
            </div>
        </div>
    );

    const renderAppearanceSection = () => (
        <div className={styles.section}>
            <h3 className={styles.sectionTitle}>–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</h3>
            <div className={styles.comingSoon}>
                <div className={styles.comingSoonIcon}>üé®</div>
                <h4 className={styles.comingSoonTitle}>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ</h4>
                <p className={styles.comingSoonText}>
                    –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã, —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
                </p>
            </div>
        </div>
    );

    const renderDataSection = () => (
        <div className={styles.section}>
            <h3 className={styles.sectionTitle}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h3>
            
            <div className={styles.dataActions}>
                <div className={styles.dataAction}>
                    <div className={styles.dataActionInfo}>
                        <h4 className={styles.dataActionTitle}>üì• –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</h4>
                        <p className={styles.dataActionDescription}>
                            –°–∫–∞—á–∞—Ç—å –∞—Ä—Ö–∏–≤ —Å–æ –≤—Å–µ–º–∏ –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏: –ø—Ä–æ—Ñ–∏–ª—å, –æ—Ü–µ–Ω–∫–∏, —Å–æ–æ–±—â–µ–Ω–∏—è
                        </p>
                    </div>
                    <button className={styles.dataActionBtn} onClick={exportData}>
                        –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                </div>
                
                <div className={styles.dataAction}>
                    <div className={styles.dataActionInfo}>
                        <h4 className={styles.dataActionTitle}>üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞</h4>
                        <p className={styles.dataActionDescription}>
                            –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.
                        </p>
                    </div>
                    <button className={styles.deleteBtn} onClick={deleteAccount}>
                        –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                    </button>
                </div>
            </div>
        </div>
    );

    return (
        <div className={styles.container}>
            <div className={styles.header}>
                <h2 className={styles.title}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                <p className={styles.subtitle}>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏</p>
            </div>

            <div className={styles.settingsLayout}>
                <div className={styles.sidebar}>
                    <nav className={styles.nav}>
                        {sections.map(section => (
                            <button
                                key={section.id}
                                className={`${styles.navItem} ${activeSection === section.id ? styles.active : ''}`}
                                onClick={() => setActiveSection(section.id)}
                            >
                                <span className={styles.navIcon}>{section.icon}</span>
                                <span className={styles.navLabel}>{section.label}</span>
                            </button>
                        ))}
                    </nav>
                </div>

                <div className={styles.content}>
                    {activeSection === 'profile' && renderProfileSection()}
                    {activeSection === 'notifications' && renderNotificationsSection()}
                    {activeSection === 'privacy' && renderPrivacySection()}
                    {activeSection === 'security' && renderSecuritySection()}
                    {activeSection === 'appearance' && renderAppearanceSection()}
                    {activeSection === 'data' && renderDataSection()}

                    <div className={styles.actions}>
                        <button className={styles.saveBtn} onClick={saveSettings}>
                            <span>üíæ</span>
                            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        </button>
                        <button className={styles.resetBtn} onClick={resetSettings}>
                            <span>üîÑ</span>
                            –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default ProfileSettings;