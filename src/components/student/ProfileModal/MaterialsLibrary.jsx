import React, { useState } from 'react';
import styles from './MaterialsLibrary.module.css';

function MaterialsLibrary() {
    const [activeTab, setActiveTab] = useState('my');
    const [searchQuery, setSearchQuery] = useState('');
    const [selectedSubject, setSelectedSubject] = useState('all');
    const [selectedType, setSelectedType] = useState('all');

    // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    const materials = [
        {
            id: 1,
            title: '–ò–Ω—Ç–µ–≥—Ä–∞–ª—ã –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ',
            type: 'pdf',
            subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
            teacher: '–ò–≤–∞–Ω–æ–≤–∞ –ú.–í.',
            size: '2.4 MB',
            pages: 15,
            downloadCount: 127,
            rating: 4.8,
            addedDate: '2025-08-15',
            description: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∫–æ–Ω—Å–ø–µ–∫—Ç –ø–æ —Ç–µ–º–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–æ–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ä–µ—à–µ–Ω–∏–π',
            tags: ['–∏–Ω—Ç–µ–≥—Ä–∞–ª—ã', '–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', '–≤—ã—Å—à–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞'],
            isFavorite: true,
            isDownloaded: true,
            preview: 'https://example.com/preview1.jpg'
        },
        {
            id: 2,
            title: '–≠–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞ - –æ—Å–Ω–æ–≤—ã',
            type: 'video',
            subject: '–§–∏–∑–∏–∫–∞',
            teacher: '–ü–µ—Ç—Ä–æ–≤ –ê.–°.',
            duration: '45:30',
            views: 89,
            rating: 4.6,
            addedDate: '2025-08-12',
            description: '–í–∏–¥–µ–æ–ª–µ–∫—Ü–∏—è –æ–± –æ—Å–Ω–æ–≤–∞—Ö —ç–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∏ –∏ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –ø–æ–ª—è—Ö',
            tags: ['—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ', '–º–∞–≥–Ω–µ—Ç–∏–∑–º', '–ø–æ–ª—è'],
            isFavorite: false,
            isDownloaded: false,
            preview: 'https://example.com/preview2.jpg'
        },
        {
            id: 3,
            title: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è —Ö–∏–º–∏—è - –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è',
            type: 'presentation',
            subject: '–•–∏–º–∏—è',
            teacher: '–°–º–∏—Ä–Ω–æ–≤–∞ –û.–ò.',
            size: '8.1 MB',
            slides: 42,
            downloadCount: 67,
            rating: 4.9,
            addedDate: '2025-08-10',
            description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π —Ö–∏–º–∏–∏',
            tags: ['–æ—Ä–≥–∞–Ω–∏–∫–∞', '—É–≥–ª–µ–≤–æ–¥–æ—Ä–æ–¥—ã', '—Ä–µ–∞–∫—Ü–∏–∏'],
            isFavorite: true,
            isDownloaded: true,
            preview: 'https://example.com/preview3.jpg'
        },
        {
            id: 4,
            title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏',
            type: 'test',
            subject: '–ò—Å—Ç–æ—Ä–∏—è',
            teacher: '–ù–∏–∫–æ–ª–∞–µ–≤ –í.–ü.',
            questionsCount: 25,
            timeLimit: 30,
            attempts: 156,
            rating: 4.3,
            addedDate: '2025-08-08',
            description: '–¢–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ 19-20 –≤–µ–∫–æ–≤',
            tags: ['–†–æ—Å—Å–∏—è', '19 –≤–µ–∫', '20 –≤–µ–∫'],
            isFavorite: false,
            isDownloaded: false,
            preview: 'https://example.com/preview4.jpg'
        },
        {
            id: 5,
            title: '–ë–∏–æ–ª–æ–≥–∏—è –∫–ª–µ—Ç–∫–∏ - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—Ä–æ–∫',
            type: 'interactive',
            subject: '–ë–∏–æ–ª–æ–≥–∏—è',
            teacher: '–ö–æ–∑–ª–æ–≤–∞ –ï.–í.',
            duration: '25:15',
            completions: 43,
            rating: 4.7,
            addedDate: '2025-08-05',
            description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—Ä–æ–∫ –æ —Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è—Ö –∫–ª–µ—Ç–∫–∏',
            tags: ['–∫–ª–µ—Ç–∫–∞', '–æ—Ä–≥–∞–Ω–µ–ª–ª—ã', '–±–∏–æ–ª–æ–≥–∏—è'],
            isFavorite: true,
            isDownloaded: false,
            preview: 'https://example.com/preview5.jpg'
        },
        {
            id: 6,
            title: '–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏',
            type: 'pdf',
            subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
            teacher: '–ò–≤–∞–Ω–æ–≤–∞ –ú.–í.',
            size: '1.8 MB',
            pages: 22,
            downloadCount: 89,
            rating: 4.5,
            addedDate: '2025-08-03',
            description: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏',
            tags: ['—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è', '—Ñ—É–Ω–∫—Ü–∏–∏', '—Ñ–æ—Ä–º—É–ª—ã'],
            isFavorite: false,
            isDownloaded: true,
            preview: 'https://example.com/preview6.jpg'
        }
    ];

    const subjects = ['all', '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è', '–ò—Å—Ç–æ—Ä–∏—è', '–ë–∏–æ–ª–æ–≥–∏—è'];
    const types = ['all', 'pdf', 'video', 'presentation', 'test', 'interactive'];

    const myMaterials = materials.filter(m => m.isDownloaded || m.isFavorite);
    const allMaterials = materials;

    const currentMaterials = activeTab === 'my' ? myMaterials : allMaterials;

    const filteredMaterials = currentMaterials.filter(material => {
        const matchesSearch = material.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                            material.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
                            material.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
        const matchesSubject = selectedSubject === 'all' || material.subject === selectedSubject;
        const matchesType = selectedType === 'all' || material.type === selectedType;
        return matchesSearch && matchesSubject && matchesType;
    });

    const getTypeIcon = (type) => {
        const icons = {
            'pdf': 'üìÑ',
            'video': 'üé•',
            'presentation': 'üìä',
            'test': 'üìù',
            'interactive': 'üéÆ'
        };
        return icons[type] || 'üìÑ';
    };

    const getTypeLabel = (type) => {
        const labels = {
            'pdf': 'PDF –¥–æ–∫—É–º–µ–Ω—Ç',
            'video': '–í–∏–¥–µ–æ',
            'presentation': '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è',
            'test': '–¢–µ—Å—Ç',
            'interactive': '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤'
        };
        return labels[type] || type;
    };

    const getSubjectColor = (subject) => {
        const colors = {
            '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞': '#3B82F6',
            '–§–∏–∑–∏–∫–∞': '#8B5CF6',
            '–•–∏–º–∏—è': '#06B6D4',
            '–ò—Å—Ç–æ—Ä–∏—è': '#F59E0B',
            '–ë–∏–æ–ª–æ–≥–∏—è': '#10B981'
        };
        return colors[subject] || '#6B7280';
    };

    const formatDate = (dateStr) => {
        return new Date(dateStr).toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'short',
            year: 'numeric'
        });
    };

    const formatFileSize = (size) => {
        if (!size) return '';
        return size;
    };

    const formatDuration = (duration) => {
        if (!duration) return '';
        return duration;
    };

    const toggleFavorite = (id) => {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        console.log('Toggle favorite for material', id);
    };

    const downloadMaterial = (id) => {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        console.log('Download material', id);
    };

    return (
        <div className={styles.container}>
            <div className={styles.header}>
                <h2 className={styles.title}>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</h2>
                <p className={styles.subtitle}>–î–æ—Å—Ç—É–ø –∫ —É—á–µ–±–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, –∫–æ–Ω—Å–ø–µ–∫—Ç–∞–º –∏ —Ç–µ—Å—Ç–∞–º</p>
            </div>

            {/* –í–∫–ª–∞–¥–∫–∏ */}
            <div className={styles.tabs}>
                <button
                    className={`${styles.tab} ${activeTab === 'my' ? styles.active : ''}`}
                    onClick={() => setActiveTab('my')}
                >
                    <span className={styles.tabIcon}>‚≠ê</span>
                    <span>–ú–æ–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</span>
                    <span className={styles.badge}>{myMaterials.length}</span>
                </button>
                <button
                    className={`${styles.tab} ${activeTab === 'all' ? styles.active : ''}`}
                    onClick={() => setActiveTab('all')}
                >
                    <span className={styles.tabIcon}>üóÇÔ∏è</span>
                    <span>–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</span>
                    <span className={styles.badge}>{allMaterials.length}</span>
                </button>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
            <div className={styles.controls}>
                <div className={styles.searchContainer}>
                    <span className={styles.searchIcon}>üîç</span>
                    <input
                        type="text"
                        placeholder="–ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤..."
                        value={searchQuery}
                        onChange={(e) => setSearchQuery(e.target.value)}
                        className={styles.searchInput}
                    />
                </div>
                
                <div className={styles.filters}>
                    <select
                        value={selectedSubject}
                        onChange={(e) => setSelectedSubject(e.target.value)}
                        className={styles.select}
                    >
                        <option value="all">–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã</option>
                        {subjects.slice(1).map(subject => (
                            <option key={subject} value={subject}>{subject}</option>
                        ))}
                    </select>
                    
                    <select
                        value={selectedType}
                        onChange={(e) => setSelectedType(e.target.value)}
                        className={styles.select}
                    >
                        <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
                        {types.slice(1).map(type => (
                            <option key={type} value={type}>{getTypeLabel(type)}</option>
                        ))}
                    </select>
                </div>
            </div>

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className={styles.stats}>
                <div className={styles.statCard}>
                    <div className={styles.statIcon}>üìö</div>
                    <div className={styles.statInfo}>
                        <div className={styles.statValue}>{filteredMaterials.length}</div>
                        <div className={styles.statLabel}>–ù–∞–π–¥–µ–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</div>
                    </div>
                </div>
                <div className={styles.statCard}>
                    <div className={styles.statIcon}>‚≠ê</div>
                    <div className={styles.statInfo}>
                        <div className={styles.statValue}>{myMaterials.filter(m => m.isFavorite).length}</div>
                        <div className={styles.statLabel}>–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º</div>
                    </div>
                </div>
                <div className={styles.statCard}>
                    <div className={styles.statIcon}>üíæ</div>
                    <div className={styles.statInfo}>
                        <div className={styles.statValue}>{myMaterials.filter(m => m.isDownloaded).length}</div>
                        <div className={styles.statLabel}>–ó–∞–≥—Ä—É–∂–µ–Ω–æ</div>
                    </div>
                </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ */}
            <div className={styles.content}>
                {filteredMaterials.length > 0 ? (
                    <div className={styles.materialsList}>
                        {filteredMaterials.map(material => (
                            <div key={material.id} className={styles.materialCard}>
                                <div className={styles.materialHeader}>
                                    <div className={styles.materialInfo}>
                                        <div className={styles.typeIcon}>
                                            {getTypeIcon(material.type)}
                                        </div>
                                        <div className={styles.materialDetails}>
                                            <h3 className={styles.materialTitle}>{material.title}</h3>
                                            <p className={styles.materialDescription}>{material.description}</p>
                                            <div className={styles.materialMeta}>
                                                <span 
                                                    className={styles.subjectTag}
                                                    style={{ background: getSubjectColor(material.subject) }}
                                                >
                                                    {material.subject}
                                                </span>
                                                <span className={styles.typeTag}>
                                                    {getTypeLabel(material.type)}
                                                </span>
                                                <span className={styles.teacherTag}>
                                                    üë®‚Äçüéì {material.teacher}
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div className={styles.materialActions}>
                                        <button 
                                            className={`${styles.favoriteBtn} ${material.isFavorite ? styles.favorited : ''}`}
                                            onClick={() => toggleFavorite(material.id)}
                                            title={material.isFavorite ? '–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
                                        >
                                            {material.isFavorite ? '‚ù§Ô∏è' : 'ü§ç'}
                                        </button>
                                        <div className={styles.rating}>
                                            <span className={styles.ratingIcon}>‚≠ê</span>
                                            <span className={styles.ratingValue}>{material.rating}</span>
                                        </div>
                                    </div>
                                </div>

                                <div className={styles.materialStats}>
                                    {material.size && (
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>üìè</span>
                                            <span>{formatFileSize(material.size)}</span>
                                        </div>
                                    )}
                                    {material.duration && (
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>‚è±Ô∏è</span>
                                            <span>{formatDuration(material.duration)}</span>
                                        </div>
                                    )}
                                    {material.pages && (
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>üìÑ</span>
                                            <span>{material.pages} —Å—Ç—Ä.</span>
                                        </div>
                                    )}
                                    {material.slides && (
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>üéûÔ∏è</span>
                                            <span>{material.slides} —Å–ª–∞–π–¥–æ–≤</span>
                                        </div>
                                    )}
                                    {material.questionsCount && (
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>‚ùì</span>
                                            <span>{material.questionsCount} –≤–æ–ø—Ä–æ—Å–æ–≤</span>
                                        </div>
                                    )}
                                    <div className={styles.stat}>
                                        <span className={styles.statIcon}>üìÖ</span>
                                        <span>{formatDate(material.addedDate)}</span>
                                    </div>
                                </div>

                                {material.tags && material.tags.length > 0 && (
                                    <div className={styles.tags}>
                                        {material.tags.map((tag, index) => (
                                            <span key={index} className={styles.tag}>
                                                #{tag}
                                            </span>
                                        ))}
                                    </div>
                                )}

                                <div className={styles.materialFooter}>
                                    <div className={styles.footerStats}>
                                        {material.downloadCount && (
                                            <span className={styles.footerStat}>
                                                üì• {material.downloadCount} –∑–∞–≥—Ä—É–∑–æ–∫
                                            </span>
                                        )}
                                        {material.views && (
                                            <span className={styles.footerStat}>
                                                üëÅÔ∏è {material.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
                                            </span>
                                        )}
                                        {material.attempts && (
                                            <span className={styles.footerStat}>
                                                üéØ {material.attempts} –ø–æ–ø—ã—Ç–æ–∫
                                            </span>
                                        )}
                                        {material.completions && (
                                            <span className={styles.footerStat}>
                                                ‚úÖ {material.completions} –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π
                                            </span>
                                        )}
                                    </div>
                                    
                                    <div className={styles.footerActions}>
                                        {material.type === 'video' && (
                                            <button className={styles.actionBtn}>
                                                <span>‚ñ∂Ô∏è</span>
                                                –°–º–æ—Ç—Ä–µ—Ç—å
                                            </button>
                                        )}
                                        {material.type === 'test' && (
                                            <button className={styles.actionBtn}>
                                                <span>üìù</span>
                                                –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç
                                            </button>
                                        )}
                                        {material.type === 'interactive' && (
                                            <button className={styles.actionBtn}>
                                                <span>üéÆ</span>
                                                –ó–∞–ø—É—Å—Ç–∏—Ç—å
                                            </button>
                                        )}
                                        {(material.type === 'pdf' || material.type === 'presentation') && (
                                            <>
                                                <button className={styles.actionBtn}>
                                                    <span>üëÅÔ∏è</span>
                                                    –ü—Ä–æ—Å–º–æ—Ç—Ä
                                                </button>
                                                <button 
                                                    className={styles.downloadBtn}
                                                    onClick={() => downloadMaterial(material.id)}
                                                >
                                                    <span>üì•</span>
                                                    –°–∫–∞—á–∞—Ç—å
                                                </button>
                                            </>
                                        )}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                ) : (
                    <div className={styles.emptyState}>
                        <div className={styles.emptyIcon}>üìö</div>
                        <h3 className={styles.emptyTitle}>–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                        <p className={styles.emptyDescription}>
                            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã
                        </p>
                        <button 
                            className={styles.resetButton}
                            onClick={() => {
                                setSearchQuery('');
                                setSelectedSubject('all');
                                setSelectedType('all');
                            }}
                        >
                            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                        </button>
                    </div>
                )}
            </div>
        </div>
    );
}

export default MaterialsLibrary;