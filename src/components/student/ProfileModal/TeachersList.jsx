import React, { useState, useEffect } from 'react';
import styles from './TeachersList.module.css';

function TeachersList() {
    const [searchQuery, setSearchQuery] = useState('');
    const [selectedSubject, setSelectedSubject] = useState('all');
    const [sortBy, setSortBy] = useState('name');
    
    // ‚úÖ –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ API
    const [teachers, setTeachers] = useState([]);
    const [myTeachers, setMyTeachers] = useState([]);
    const [isLoading, setIsLoading] = useState(false);
    
    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–∏—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    const loadMyTeachers = async () => {
        try {
            const response = await fetch('http://localhost:8000/invites/my-teachers', {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`,
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.ok) {
                const teachersData = await response.json();
                console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –º–æ–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:', teachersData);
                
                // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –≤ —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                const formattedTeachers = teachersData.map(teacher => ({
                    id: teacher.id,
                    name: teacher.name,
                    avatar: teacher.name.split(' ').map(n => n[0]).join(''), // –ò–Ω–∏—Ü–∏–∞–ª—ã
                    subject: teacher.subject || '–ù–µ —É–∫–∞–∑–∞–Ω',
                    specialization: [],
                    rating: 5.0, // –ø–æ–∫–∞ —Å—Ç–∞—Ç–∏—á–Ω–æ
                    studentsCount: 0, // –ø–æ–∫–∞ —Å—Ç–∞—Ç–∏—á–Ω–æ
                    experience: 0, // –ø–æ–∫–∞ —Å—Ç–∞—Ç–∏—á–Ω–æ
                    education: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                    achievements: [],
                    isMyTeacher: true,
                    nextLesson: null,
                    status: 'online'
                }));
                
                setMyTeachers(formattedTeachers);
            } else {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π:', response.status);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
        }
    };
    
    // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    useEffect(() => {
        setIsLoading(true);
        loadMyTeachers().finally(() => setIsLoading(false));
    }, []);

    const subjects = ['all', '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è', '–ë–∏–æ–ª–æ–≥–∏—è', '–ò—Å—Ç–æ—Ä–∏—è'];
    
    // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö
    const allTeachers = [...myTeachers, ...teachers];
    
    const filteredTeachers = allTeachers
        .filter(teacher => {
            const matchesSearch = teacher.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                                teacher.subject.toLowerCase().includes(searchQuery.toLowerCase());
            const matchesSubject = selectedSubject === 'all' || teacher.subject === selectedSubject;
            return matchesSearch && matchesSubject;
        })
        .sort((a, b) => {
            switch (sortBy) {
                case 'rating':
                    return b.rating - a.rating;
                case 'students':
                    return b.studentsCount - a.studentsCount;
                case 'experience':
                    return b.experience - a.experience;
                default:
                    return a.name.localeCompare(b.name);
            }
        });

    const myTeachersFiltered = filteredTeachers.filter(teacher => teacher.isMyTeacher);
    const availableTeachers = filteredTeachers.filter(teacher => !teacher.isMyTeacher);

    const getSubjectColor = (subject) => {
        const colors = {
            '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞': '#3B82F6',
            '–§–∏–∑–∏–∫–∞': '#8B5CF6',
            '–•–∏–º–∏—è': '#06B6D4',
            '–ë–∏–æ–ª–æ–≥–∏—è': '#10B981',
            '–ò—Å—Ç–æ—Ä–∏—è': '#F59E0B',
            '–ù–µ —É–∫–∞–∑–∞–Ω': '#6B7280'
        };
        return colors[subject] || '#6B7280';
    };

    const getStatusColor = (status) => {
        const colors = {
            'online': '#10B981',
            'busy': '#F59E0B',
            'offline': '#6B7280'
        };
        return colors[status] || '#6B7280';
    };

    const getStatusText = (status) => {
        const texts = {
            'online': '–í —Å–µ—Ç–∏',
            'busy': '–ó–∞–Ω—è—Ç',
            'offline': '–ù–µ –≤ —Å–µ—Ç–∏'
        };
        return texts[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    };

    const formatNextLesson = (dateStr) => {
        if (!dateStr) return '';
        const date = new Date(dateStr);
        const now = new Date();
        const tomorrow = new Date(now);
        tomorrow.setDate(tomorrow.getDate() + 1);
        
        if (date.toDateString() === now.toDateString()) {
            return `–°–µ–≥–æ–¥–Ω—è –≤ ${date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}`;
        } else if (date.toDateString() === tomorrow.toDateString()) {
            return `–ó–∞–≤—Ç—Ä–∞ –≤ ${date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}`;
        } else {
            return date.toLocaleDateString('ru-RU', { 
                day: 'numeric', 
                month: 'short',
                hour: '2-digit',
                minute: '2-digit'
            });
        }
    };

    // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    if (isLoading) {
        return (
            <div className={styles.container}>
                <div className={styles.loadingState}>
                    <div className={styles.loadingSpinner}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    <p>–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π...</p>
                </div>
            </div>
        );
    }

    return (
        <div className={styles.container}>
            <div className={styles.header}>
                <h2 className={styles.title}>–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</h2>
                <p className={styles.subtitle}>–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã</p>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
            <div className={styles.controls}>
                <div className={styles.searchContainer}>
                    <span className={styles.searchIcon}>üîç</span>
                    <input
                        type="text"
                        placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç—É..."
                        value={searchQuery}
                        onChange={(e) => setSearchQuery(e.target.value)}
                        className={styles.searchInput}
                    />
                </div>
                
                <div className={styles.filters}>
                    <select
                        value={selectedSubject}
                        onChange={(e) => setSelectedSubject(e.target.value)}
                        className={styles.select}
                    >
                        <option value="all">–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã</option>
                        {subjects.slice(1).map(subject => (
                            <option key={subject} value={subject}>{subject}</option>
                        ))}
                    </select>
                    
                    <select
                        value={sortBy}
                        onChange={(e) => setSortBy(e.target.value)}
                        className={styles.select}
                    >
                        <option value="name">–ü–æ –∏–º–µ–Ω–∏</option>
                        <option value="rating">–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É</option>
                        <option value="students">–ü–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–µ–Ω–∏–∫–æ–≤</option>
                        <option value="experience">–ü–æ —Å—Ç–∞–∂—É</option>
                    </select>
                </div>
            </div>

            <div className={styles.content}>
                {/* –ú–æ–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ */}
                {myTeachersFiltered.length > 0 && (
                    <div className={styles.section}>
                        <h3 className={styles.sectionTitle}>
                            <span className={styles.sectionIcon}>üë®‚Äçüéì</span>
                            –ú–æ–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ({myTeachersFiltered.length})
                        </h3>
                        
                        <div className={styles.teachersList}>
                            {myTeachersFiltered.map(teacher => (
                                <div key={teacher.id} className={`${styles.teacherCard} ${styles.myTeacher}`}>
                                    <div className={styles.teacherHeader}>
                                        <div className={styles.teacherInfo}>
                                            <div 
                                                className={styles.teacherAvatar}
                                                style={{ background: getSubjectColor(teacher.subject) }}
                                            >
                                                {teacher.avatar}
                                            </div>
                                            <div className={styles.teacherDetails}>
                                                <h4 className={styles.teacherName}>{teacher.name}</h4>
                                                <p className={styles.teacherSubject}>{teacher.subject}</p>
                                                <div className={styles.teacherStatus}>
                                                    <span 
                                                        className={styles.statusDot}
                                                        style={{ background: getStatusColor(teacher.status) }}
                                                    ></span>
                                                    <span className={styles.statusText}>
                                                        {getStatusText(teacher.status)}
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div className={styles.teacherRating}>
                                            <span className={styles.ratingIcon}>‚≠ê</span>
                                            <span className={styles.ratingValue}>{teacher.rating}</span>
                                        </div>
                                    </div>

                                    {teacher.nextLesson && (
                                        <div className={styles.nextLesson}>
                                            <span className={styles.lessonIcon}>üìÖ</span>
                                            <span>–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫: {formatNextLesson(teacher.nextLesson)}</span>
                                        </div>
                                    )}

                                    <div className={styles.teacherStats}>
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>üë•</span>
                                            <span>{teacher.studentsCount} —É—á–µ–Ω–∏–∫–æ–≤</span>
                                        </div>
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>‚è≥</span>
                                            <span>{teacher.experience} –ª–µ—Ç –æ–ø—ã—Ç–∞</span>
                                        </div>
                                        <div className={styles.stat}>
                                            <span className={styles.statIcon}>üéì</span>
                                            <span>{teacher.education}</span>
                                        </div>
                                    </div>

                                    <div className={styles.specializations}>
                                        {teacher.specialization.length > 0 ? teacher.specialization.map((spec, index) => (
                                            <span 
                                                key={index} 
                                                className={styles.specializationTag}
                                                style={{ borderColor: getSubjectColor(teacher.subject) }}
                                            >
                                                {spec}
                                            </span>
                                        )) : (
                                            <span className={styles.noSpecialization}>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞</span>
                                        )}
                                    </div>

                                    <div className={styles.teacherActions}>
                                        <button className={styles.primaryAction}>
                                            <span>üí¨</span>
                                            –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                                        </button>
                                        <button className={styles.secondaryAction}>
                                            <span>üìä</span>
                                            –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏
                                        </button>
                                        <button className={styles.secondaryAction}>
                                            <span>üìÖ</span>
                                            –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                                        </button>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                )}

                {/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π */}
                {myTeachersFiltered.length === 0 && !isLoading && (
                    <div className={styles.emptyState}>
                        <div className={styles.emptyIcon}>üë®‚Äçüéì</div>
                        <h3 className={styles.emptyTitle}>–ù–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</h3>
                        <p className={styles.emptyDescription}>
                            –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è" —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é
                        </p>
                    </div>
                )}

                {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ - –ø–æ–∫–∞ —Å–∫—Ä—ã–≤–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç API –¥–ª—è –Ω–∏—Ö */}
                {availableTeachers.length > 0 && (
                    <div className={styles.section}>
                        <h3 className={styles.sectionTitle}>
                            <span className={styles.sectionIcon}>üîç</span>
                            –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ({availableTeachers.length})
                        </h3>
                        <p>–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ</p>
                    </div>
                )}
            </div>
        </div>
    );
}

export default TeachersList;