import React, { useState } from 'react';
import styles from './Planning.module.css';

function Planning() {
    const [goals, setGoals] = useState([
        { id: 1, text: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –æ–ª–∏–º–ø–∏–∞–¥–µ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ', completed: true },
        { id: 2, text: '–£–ª—É—á—à–∏—Ç—å –æ—Ü–µ–Ω–∫—É –ø–æ —Ñ–∏–∑–∏–∫–µ', completed: false },
        { id: 3, text: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 5 –∫–Ω–∏–≥ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ', completed: false },
        { id: 4, text: '–°–¥–∞—Ç—å TOEFL –Ω–∞ 90+ –±–∞–ª–ª–æ–≤', completed: true }
    ]);

    const [newGoal, setNewGoal] = useState('');

    const modules = [
        {
            id: 1,
            name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è',
            progress: 75,
            deadline: '15 –∞–≤–≥—É—Å—Ç–∞',
            status: 'active',
            tasks: 12,
            completedTasks: 9
        },
        {
            id: 2,
            name: '–§–∏–∑–∏–∫–∞: –≠–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞',
            progress: 45,
            deadline: '20 –∞–≤–≥—É—Å—Ç–∞',
            status: 'active',
            tasks: 15,
            completedTasks: 7
        },
        {
            id: 3,
            name: '–ò—Å—Ç–æ—Ä–∏—è: –î—Ä–µ–≤–Ω—è—è –†—É—Å—å',
            progress: 90,
            deadline: '10 –∞–≤–≥—É—Å—Ç–∞',
            status: 'urgent',
            tasks: 8,
            completedTasks: 7
        },
        {
            id: 4,
            name: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π: Present Perfect',
            progress: 60,
            deadline: '12 –∞–≤–≥—É—Å—Ç–∞',
            status: 'active',
            tasks: 10,
            completedTasks: 6
        }
    ];

    const studyPlan = [
        {
            time: '08:00-09:00',
            subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
            topic: '–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏',
            type: 'review'
        },
        {
            time: '09:15-10:15',
            subject: '–§–∏–∑–∏–∫–∞',
            topic: '–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–µ',
            type: 'practice'
        },
        {
            time: '10:30-11:30',
            subject: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
            topic: '–ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
            type: 'homework'
        },
        {
            time: '15:00-16:00',
            subject: '–ò—Å—Ç–æ—Ä–∏—è',
            topic: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π',
            type: 'exam'
        }
    ];

    const toggleGoal = (id) => {
        setGoals(goals.map(goal => 
            goal.id === id ? { ...goal, completed: !goal.completed } : goal
        ));
    };

    const addGoal = () => {
        if (newGoal.trim()) {
            const newGoalObj = {
                id: Date.now(),
                text: newGoal,
                completed: false
            };
            setGoals([...goals, newGoalObj]);
            setNewGoal('');
        }
    };

    const getModuleStatusClass = (status) => {
        switch (status) {
            case 'urgent': return styles.moduleUrgent;
            case 'active': return styles.moduleActive;
            case 'completed': return styles.moduleCompleted;
            default: return styles.moduleActive;
        }
    };

    const getTaskTypeIcon = (type) => {
        switch (type) {
            case 'review': return 'üìö';
            case 'practice': return '‚úçÔ∏è';
            case 'homework': return 'üìù';
            case 'exam': return 'üéØ';
            default: return 'üìñ';
        }
    };

    const generateAIPlan = () => {
        alert('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò (–¥–µ–º–æ)');
    };

    return (
        <div className={styles.planningContainer}>
            <div className={styles.modulesSection}>
                <div className={styles.sectionHeader}>
                    <div className={styles.headerContent}>
                        <h2>üìö –£—á–µ–±–Ω—ã–µ –º–æ–¥—É–ª–∏</h2>
                        <p>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º</p>
                    </div>
                    <button className={styles.generateBtn} onClick={generateAIPlan}>
                        ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –ò–ò
                    </button>
                </div>
                
                <div className={styles.modulesList}>
                    {modules.map(module => (
                        <div key={module.id} className={`${styles.moduleItem} ${getModuleStatusClass(module.status)}`}>
                            <div className={styles.moduleProgress}>
                                <svg className={styles.progressCircle} viewBox="0 0 36 36">
                                    <path
                                        className={styles.progressCircleBg}
                                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                                    />
                                    <path
                                        className={styles.progressCircleFill}
                                        strokeDasharray={`${module.progress}, 100`}
                                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                                    />
                                </svg>
                                <div className={styles.progressText}>{module.progress}%</div>
                            </div>
                            
                            <div className={styles.moduleInfo}>
                                <h3 className={styles.moduleName}>{module.name}</h3>
                                <div className={styles.moduleDetails}>
                                    <span className={styles.moduleDeadline}>üìÖ –î–µ–¥–ª–∞–π–Ω: {module.deadline}</span>
                                    <span className={styles.moduleTasks}>
                                        {module.completedTasks}/{module.tasks} –∑–∞–¥–∞–Ω–∏–π
                                    </span>
                                </div>
                            </div>
                            
                            <div className={styles.moduleActions}>
                                <button className={styles.moduleBtn}>üìù</button>
                                <button className={styles.moduleBtn}>üìä</button>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            <div className={styles.rightPanel}>
                {/* –õ–∏—á–Ω—ã–µ —Ü–µ–ª–∏ */}
                <div className={styles.goalsSection}>
                    <div className={styles.goalsHeader}>
                        <h2>üéØ –õ–∏—á–Ω—ã–µ —Ü–µ–ª–∏</h2>
                        <span className={styles.goalsProgress}>
                            {goals.filter(g => g.completed).length}/{goals.length}
                        </span>
                    </div>
                    
                    <div className={styles.goalsList}>
                        {goals.map(goal => (
                            <div key={goal.id} className={styles.goalItem}>
                                <div 
                                    className={`${styles.goalCheckbox} ${goal.completed ? styles.checked : ''}`}
                                    onClick={() => toggleGoal(goal.id)}
                                >
                                    {goal.completed && <span className={styles.checkmark}>‚úì</span>}
                                </div>
                                <span className={`${styles.goalText} ${goal.completed ? styles.completed : ''}`}>
                                    {goal.text}
                                </span>
                            </div>
                        ))}
                    </div>
                    
                    <div className={styles.addGoalSection}>
                        <input
                            type="text"
                            className={styles.goalInput}
                            placeholder="–ù–æ–≤–∞—è —Ü–µ–ª—å..."
                            value={newGoal}
                            onChange={(e) => setNewGoal(e.target.value)}
                            onKeyPress={(e) => e.key === 'Enter' && addGoal()}
                        />
                        <button className={styles.addGoalBtn} onClick={addGoal}>
                            ‚ûï
                        </button>
                    </div>
                </div>

                {/* –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å */}
                <div className={styles.dailyPlanSection}>
                    <div className={styles.planHeader}>
                        <h3>üìÖ –ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</h3>
                        <button className={styles.editPlanBtn}>‚úèÔ∏è</button>
                    </div>
                    
                    <div className={styles.planList}>
                        {studyPlan.map((item, index) => (
                            <div key={index} className={styles.planItem}>
                                <div className={styles.planTime}>{item.time}</div>
                                <div className={styles.planContent}>
                                    <div className={styles.planSubject}>
                                        <span className={styles.planIcon}>{getTaskTypeIcon(item.type)}</span>
                                        {item.subject}
                                    </div>
                                    <div className={styles.planTopic}>{item.topic}</div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–µ–ª–∏ */}
                <div className={styles.weekStatsSection}>
                    <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–µ–ª–∏</h3>
                    <div className={styles.statsGrid}>
                        <div className={styles.statItem}>
                            <div className={styles.statValue}>24</div>
                            <div className={styles.statLabel}>–ß–∞—Å–æ–≤ —É—á–µ–±—ã</div>
                        </div>
                        <div className={styles.statItem}>
                            <div className={styles.statValue}>18</div>
                            <div className={styles.statLabel}>–ó–∞–¥–∞–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
                        </div>
                        <div className={styles.statItem}>
                            <div className={styles.statValue}>85%</div>
                            <div className={styles.statLabel}>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</div>
                        </div>
                        <div className={styles.statItem}>
                            <div className={styles.statValue}>3</div>
                            <div className={styles.statLabel}>–¶–µ–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default Planning;