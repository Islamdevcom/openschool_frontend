import React, { useState } from 'react';
import { useNavigate } from "react-router-dom";
import styles from './LoginPage.module.css';
import { useAuth } from "../../context/AuthContext";

const LoginPage = () => {
    const [formData, setFormData] = useState({
        email: '',
        password: '',
        role: 'student',
        schoolCode: ''
    });
    const [isLoading, setIsLoading] = useState(false);
    const [showSchoolCode, setShowSchoolCode] = useState(false);
    const navigate = useNavigate();
    const { login } = useAuth();

    const handleInputChange = (e) => {
        const { name, value, type, checked } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: type === "checkbox" ? checked : value
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsLoading(true);

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç–æ–ª—å–∫–æ —Å email –∏ password –¥–ª—è API
        const payload = {
            email: formData.email,
            password: formData.password
        };

        // DEBUG LOG: —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        console.log("LOGIN PAYLOAD:", payload);

        try {
            // –í–µ—Å—å fetch –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ login –∏–∑ AuthContext!
            const { role, school_id } = await login(payload);

            // –õ–æ–≥–∏–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ —Å —É—á–µ—Ç–æ–º —à–∫–æ–ª—å–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
            if (showSchoolCode && formData.schoolCode && role === "student") {
                // –£—á–µ–Ω–∏–∫ —Å –∫–æ–¥–æ–º —à–∫–æ–ª—ã -> —à–∫–æ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                navigate("/school", { state: { schoolCode: formData.schoolCode } });
            } else {
                // –û–±—ã—á–Ω—ã–π –≤—Ö–æ–¥
                if (role === "teacher") navigate("/teacher");
                else if (role === "student") navigate("/student");
            }
        } catch (err) {
            alert(err.message || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <div className={styles.loginContainer}>
            <div className={styles.headerSection}>
                <div className={styles.logo}>
                    <h1>üéì OpenSchool AI</h1>
                </div>
            </div>

            <form onSubmit={handleSubmit} className={styles.loginForm} autoComplete="off">
                <div className={styles.formGroup}>
                    <label>–Ø –≤—Ö–æ–∂—É –∫–∞–∫</label>
                    <div className={styles.roleSelector}>
                        <label className={`${styles.roleOption} ${formData.role === 'student' ? styles.active : ''}`}>
                            <input
                                type="radio"
                                name="role"
                                value="student"
                                checked={formData.role === 'student'}
                                onChange={handleInputChange}
                            />
                            <span className={styles.roleIcon}>üë®‚Äçüéì</span>
                            <span>–£—á–µ–Ω–∏–∫</span>
                        </label>
                        <label className={`${styles.roleOption} ${formData.role === 'teacher' ? styles.active : ''}`}>
                            <input
                                type="radio"
                                name="role"
                                value="teacher"
                                checked={formData.role === 'teacher'}
                                onChange={handleInputChange}
                            />
                            <span className={styles.roleIcon}>üë®‚Äçüè´</span>
                            <span>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</span>
                        </label>
                    </div>
                </div>

                <div className={styles.formGroup}>
                    <label>Email –∏–ª–∏ –ª–æ–≥–∏–Ω</label>
                    <div className={styles.inputWrapper}>
                        <input
                            type="text"
                            name="email"
                            className={styles.formInput}
                            placeholder="–í–≤–µ–¥–∏—Ç–µ email"
                            value={formData.email}
                            onChange={handleInputChange}
                            required
                        />
                    </div>
                </div>

                <div className={styles.formGroup}>
                    <label>–ü–∞—Ä–æ–ª—å</label>
                    <div className={styles.inputWrapper}>
                        <input
                            type="password"
                            name="password"
                            className={styles.formInput}
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                            value={formData.password}
                            onChange={handleInputChange}
                            required
                        />
                    </div>
                </div>

                <div className={styles.toggleSection}>
                    <div className={styles.toggleWrapper}>
                        <span className={styles.toggleLabel}>–í—Ö–æ–¥ —á–µ—Ä–µ–∑ —à–∫–æ–ª—É</span>
                        <label className={styles.toggleSwitch}>
                            <input
                                type="checkbox"
                                name="showSchoolCode"
                                checked={showSchoolCode}
                                onChange={(e) => setShowSchoolCode(e.target.checked)}
                            />
                            <span className={styles.slider}></span>
                        </label>
                    </div>

                    {showSchoolCode && (
                        <div className={styles.schoolCodeInput}>
                            <span className={styles.schoolIcon}>üìå</span>
                            <input
                                type="text"
                                name="schoolCode"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —à–∫–æ–ª—ã"
                                className={styles.codeInput}
                                value={formData.schoolCode}
                                onChange={handleInputChange}
                            />
                        </div>
                    )}
                </div>

                <button type="submit" className={`${styles.loginBtn} ${isLoading ? styles.loading : ''}`} disabled={isLoading}>
                    <span className={styles.btnIcon}>{isLoading ? '‚è≥' : '‚úÖ'}</span>
                    <span className={styles.btnText}>{isLoading ? '–í—Ö–æ–¥–∏–º...' : '–í–æ–π—Ç–∏'}</span>
                </button>

                <div className={styles.selfRegister}>
                    <a href="#" onClick={(e) => { e.preventDefault(); navigate("/self-register"); }}>
                        üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
                    </a>
                </div>

                <div className={styles.additionalOptions}>
                    <button type="button" className={styles.gmailBtn} onClick={() => alert('–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Gmail ‚Äî —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç!')}>
                        <span>üîó</span> –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Gmail
                    </button>
                    <button type="button" className={styles.forgotBtn} onClick={() => alert('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è ‚Äî —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç!')}>
                        ‚ùì –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                    </button>
                </div>

                <div className={styles.formLinks}>
                    <button type="button" className={styles.registerBtn} onClick={() => navigate("/enter-code")}>
                        üè´ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–æ–¥ —à–∫–æ–ª—ã
                    </button>
                </div>
            </form>
        </div>
    );
};

export default LoginPage;