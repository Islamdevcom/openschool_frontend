import React, { useState, useEffect } from 'react';
import Header from '../../components/schooladmin/Header';
import DashboardCard from '../../components/schooladmin/DashboardCard';
import QuickActions from '../../components/schooladmin/QuickActions';
import Modal from '../../components/schooladmin/Modal';
import Notification from '../../components/schooladmin/Notification';
import './SchoolAdminApp.css';

const SchoolAdminApp = () => {
  const [activeModal, setActiveModal] = useState(null);
  const [notification, setNotification] = useState({ show: false, message: '', type: 'success' });

const dashboardData = [
    {
      id: 'teachers',
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏',
      icon: 'üßë‚Äçüè´',
      iconClass: 'teachers-icon',
      stats: [
        { number: '45', label: '–í—Å–µ–≥–æ' },
        { number: '42', label: '–ê–∫—Ç–∏–≤–Ω—ã—Ö' },
        { number: '3', label: '–ù–æ–≤—ã—Ö' }
      ],
      actions: ['‚ûï –î–æ–±–∞–≤–∏—Ç—å', 'üìä Excel –∏–º–ø–æ—Ä—Ç', 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞']
    },
    {
      id: 'students',
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º–∏',
      icon: 'üë®‚Äçüéì',
      iconClass: 'students-icon',
      stats: [
        { number: '756', label: '–í—Å–µ–≥–æ' },
        { number: '34', label: '–ö–ª–∞—Å—Å–æ–≤' },
        { number: '12', label: '–ù–æ–≤—ã—Ö' }
      ],
      actions: ['‚ûï –î–æ–±–∞–≤–∏—Ç—å', 'üì• –ò–º–ø–æ—Ä—Ç', 'üì§ –≠–∫—Å–ø–æ—Ä—Ç']
    },
    {
      id: 'subjects',
      title: '–£—á–µ–±–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
      icon: 'üìö',
      iconClass: 'subjects-icon',
      stats: [
        { number: '18', label: '–ü—Ä–µ–¥–º–µ—Ç–æ–≤' },
        { number: '89', label: '–ì—Ä—É–ø–ø' },
        { number: '34', label: '–ö–ª–∞—Å—Å–æ–≤' }
      ],
      actions: ['‚ûï –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å', 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', 'üîó –°–≤—è–∑–∏']
    },
    {
      id: 'reports',
      title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã',
      icon: 'üìä',
      iconClass: 'reports-icon',
      stats: [
        { number: '85%', label: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' },
        { number: '92%', label: '–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å' },
        { number: '156', label: '–ó–∞–¥–∞–Ω–∏–π' }
      ],
      actions: ['üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 'üìä –£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å', 'üì• –°–∫–∞—á–∞—Ç—å']
    },
    {
      id: 'access',
      title: '–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞',
      icon: 'üîë',
      iconClass: 'access-icon',
      stats: [
        { number: '45', label: '–†–æ–ª–µ–π' },
        { number: '12', label: 'Hybrid' },
        { number: '33', label: 'Strict' }
      ],
      actions: ['üõ† –†–æ–ª–∏', '‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è', 'üß™ –î–µ–º–æ-–¥–æ—Å—Ç—É–ø']
    },
    {
      id: 'settings',
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∫–æ–ª—ã',
      icon: '‚öôÔ∏è',
      iconClass: 'settings-icon',
      stats: [
        { number: '100%', label: '–ù–∞—Å—Ç—Ä–æ–µ–Ω–æ' },
        { number: '5', label: '–î–Ω–µ–π' },
        { number: '1000', label: '–õ–∏–º–∏—Ç' }
      ],
      actions: ['‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üñºÔ∏è –õ–æ–≥–æ—Ç–∏–ø', 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ']
    }
  ];

  const quickActionsData = [
    {
      icon: 'üì•',
      title: '–ò–º–ø–æ—Ä—Ç —É—á–µ–Ω–∏–∫–æ–≤',
      description: '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏ –∫–ª–∞—Å—Å–æ–≤ –∏–∑ Excel',
      action: () => showNotification('–ò–º–ø–æ—Ä—Ç —É—á–µ–Ω–∏–∫–æ–≤ –Ω–∞—á–∞—Ç')
    },
    {
      icon: 'üìä',
      title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞',
      description: '–°–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç –ø–æ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏',
      action: () => showNotification('–û—Ç—á—ë—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è')
    },
    {
      icon: 'üì¢',
      title: '–†–∞—Å—Å—ã–ª–∫–∞',
      description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º',
      action: () => showNotification('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã')
    },
    {
      icon: 'üíæ',
      title: '–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è',
      description: '–°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö',
      action: () => showNotification('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞')
    }
  ];

  const showNotification = (message, type = 'success') => {
    setNotification({ show: true, message, type });
    setActiveModal(null);
    
    setTimeout(() => {
      setNotification({ show: false, message: '', type: 'success' });
    }, 3000);
  };

  const openModal = (modalId) => {
    setActiveModal(modalId);
  };

  const closeModal = () => {
    setActiveModal(null);
  };

  const handleFormSubmit = (modalId, formData) => {
    const messages = {
      teachers: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω',
      students: '–£—á–µ–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω',
      subjects: '–ö–ª–∞—Å—Å —Å–æ–∑–¥–∞–Ω',
      reports: '–û—Ç—á—ë—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è',
      access: '–î–æ—Å—Ç—É–ø –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
      settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
    };
    
    showNotification(messages[modalId] || '–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
  };

  const renderModalContent = () => {
    switch(activeModal) {
      case 'teachers':
        return (
          <div>
            <div className="form-group">
              <label className="form-label">–ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</label>
              <input type="text" className="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è" />
            </div>
            <div className="form-group">
              <label className="form-label">–ü—Ä–µ–¥–º–µ—Ç—ã</label>
              <select className="form-select">
                <option>–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞</option>
                <option>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</option>
                <option>–§–∏–∑–∏–∫–∞</option>
                <option>–•–∏–º–∏—è</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–†–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞</label>
              <select className="form-select">
                <option>Strict - —Ç–æ–ª—å–∫–æ —à–∫–æ–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã</option>
                <option>Hybrid - –º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ –¥–æ–ø. –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
              </select>
            </div>
            <button className="btn-primary" onClick={() => handleFormSubmit('teachers')}>
              –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
            </button>
          </div>
        );
      
      case 'students':
        return (
          <div>
            <div className="form-group">
              <label className="form-label">–ò–º—è —É—á–µ–Ω–∏–∫–∞</label>
              <input type="text" className="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è" />
            </div>
            <div className="form-group">
              <label className="form-label">–ö–ª–∞—Å—Å</label>
              <select className="form-select">
                <option>7–ê</option>
                <option>7–ë</option>
                <option>8–ê</option>
                <option>8–ë</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–õ–æ–≥–∏–Ω</label>
              <input type="text" className="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω" />
            </div>
            <button className="btn-primary" onClick={() => handleFormSubmit('students')}>
              –î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞
            </button>
          </div>
        );
      
      case 'subjects':
        return (
          <div>
            <div className="form-group">
              <label className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞</label>
              <input type="text" className="form-input" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 7–ê" />
            </div>
            <div className="form-group">
              <label className="form-label">–ö–ª–∞—Å—Å–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å</label>
              <select className="form-select">
                <option>–ò–≤–∞–Ω–æ–≤–∞ –ê.–ü.</option>
                <option>–ü–µ—Ç—Ä–æ–≤ –°.–ò.</option>
                <option>–°–∏–¥–æ—Ä–æ–≤–∞ –ú.–í.</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–ü—Ä–µ–¥–º–µ—Ç</label>
              <select className="form-select">
                <option>–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞</option>
                <option>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</option>
                <option>–§–∏–∑–∏–∫–∞</option>
              </select>
            </div>
            <button className="btn-primary" onClick={() => handleFormSubmit('subjects')}>
              –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å
            </button>
          </div>
        );
      
      case 'reports':
        return (
          <div>
            <div className="form-group">
              <label className="form-label">–¢–∏–ø –æ—Ç—á—ë—Ç–∞</label>
              <select className="form-select">
                <option>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</option>
                <option>–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å —É—á–µ–Ω–∏–∫–æ–≤</option>
                <option>–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º</option>
                <option>–ò—Å—Ç–æ—Ä–∏—è –≤—Ö–æ–¥–æ–≤</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–ü–µ—Ä–∏–æ–¥</label>
              <select className="form-select">
                <option>–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è</option>
                <option>–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü</option>
                <option>–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å</option>
                <option>–í–µ—Å—å —É—á–µ–±–Ω—ã–π –≥–æ–¥</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–§–æ—Ä–º–∞—Ç</label>
              <select className="form-select">
                <option>PDF</option>
                <option>Excel</option>
                <option>CSV</option>
              </select>
            </div>
            <button className="btn-primary" onClick={() => handleFormSubmit('reports')}>
              –°–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç
            </button>
          </div>
        );
      
      case 'access':
        return (
          <div>
            <div className="form-group">
              <label className="form-label">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</label>
              <select className="form-select">
                <option>–ò–≤–∞–Ω–æ–≤–∞ –ê.–ü.</option>
                <option>–ü–µ—Ç—Ä–æ–≤ –°.–ò.</option>
                <option>–°–∏–¥–æ—Ä–æ–≤–∞ –ú.–í.</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–†–æ–ª—å</label>
              <select className="form-select">
                <option>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</option>
                <option>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</option>
                <option>–°—Ç–∞–∂—ë—Ä</option>
              </select>
            </div>
            <div className="form-group">
              <label className="form-label">–†–∞–∑—Ä–µ—à–µ–Ω–∏—è</label>
              <select className="form-select">
                <option>–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø</option>
                <option>–¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä</option>
                <option>–°–æ–∑–¥–∞–Ω–∏–µ —É—á–µ–Ω–∏–∫–æ–≤ (Hybrid)</option>
                <option>–í—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø</option>
              </select>
            </div>
            <button className="btn-primary" onClick={() => handleFormSubmit('access')}>
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        );
      
      case 'settings':
        return (
          <div>
            <div className="form-group">
              <label className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã</label>
              <input type="text" className="form-input" defaultValue="–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ42" />
            </div>
            <div className="form-group">
              <label className="form-label">–ê–¥—Ä–µ—Å</label>
              <input type="text" className="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —à–∫–æ–ª—ã" />
            </div>
            <div className="form-group">
              <label className="form-label">–ö–æ–¥ —à–∫–æ–ª—ã</label>
              <input type="text" className="form-input" defaultValue="GYM42" />
            </div>
            <div className="form-group">
              <label className="form-label">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</label>
              <input type="number" className="form-input" defaultValue="1000" />
            </div>
            <button className="btn-primary" onClick={() => handleFormSubmit('settings')}>
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        );
      
      default:
        return null;
    }
  };

  const getModalTitle = () => {
    const titles = {
      teachers: 'üßë‚Äçüè´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏',
      students: 'üë®‚Äçüéì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º–∏',
      subjects: 'üìö –£—á–µ–±–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
      reports: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã',
      access: 'üîë –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞',
      settings: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∫–æ–ª—ã'
    };
    return titles[activeModal] || '';
  };

  // –ê–Ω–∏–º–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const cards = document.querySelectorAll('.card');
    cards.forEach((card, index) => {
      card.style.opacity = '0';
      card.style.transform = 'translateY(20px)';
      setTimeout(() => {
        card.style.transition = 'all 0.5s ease';
        card.style.opacity = '1';
        card.style.transform = 'translateY(0)';
      }, index * 100);
    });
  }, []);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π
  useEffect(() => {
    const handleKeyDown = (e) => {
      if (e.ctrlKey) {
        switch(e.key) {
          case 't':
            e.preventDefault();
            openModal('teachers');
            break;
          case 's':
            e.preventDefault();
            openModal('students');
            break;
          case 'r':
            e.preventDefault();
            openModal('reports');
            break;
        }
      }
      
      if (e.key === 'Escape') {
        closeModal();
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, []);

  return (
    <div className="container">
      <Header />
      
      <div className="dashboard-grid">
        {dashboardData.map((card) => (
          <DashboardCard 
            key={card.id}
            {...card}
            onClick={() => openModal(card.id)}
            onActionClick={(action) => showNotification(`–î–µ–π—Å—Ç–≤–∏–µ "${action}" –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...`, 'info')}
          />
        ))}
      </div>

      <QuickActions 
        actions={quickActionsData}
      />

      {activeModal && (
        <Modal 
          title={getModalTitle()}
          onClose={closeModal}
        >
          {renderModalContent()}
        </Modal>
      )}

      <Notification 
        show={notification.show}
        message={notification.message}
        type={notification.type}
      />
    </div>
  );
};

export default SchoolAdminApp;